.select,
.input {
  width: 100%;
}

.button {
  text-transform: capitalize;
  text-decoration: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (width >= 600px) {
  .button {
    max-width: 200px;
  }

  .button.wide {
    max-width: 300px;
  }
}

.input:not([type="file"]),
.select,
.button,
.input[type="file"]::file-selector-button {
  padding: var(--gap--m);
  border: var(--border-width) solid var(--color-border);
  border-radius: var(--border-radius);
  font: inherit;
}

.input:not([type="checkbox"]),
.input[type="file"]::file-selector-button,
.select {
  appearance: none;
  background: none;
  line-height: inherit;
}

.select.inline {
  width: auto;
}

.input[type="file"],
.input[type="file"]::file-selector-button {
  cursor: pointer;
}

.button:disabled {
  background: none;
  color: var(--color-text--disabled);
}

.button:not(:disabled) {
  cursor: pointer;
  background: none;
}

.input:not(:disabled),
.select:not(:disabled),
.button:not(:disabled),
.input[type="file"]:not(:disabled)::file-selector-button {
  color: var(--color-text);
  background-color: var(--color-background--alt);
}

.input.inputWithIcon {
  padding-right: 40px;
}

.inputWithButton {
  display: flex;
}

.inputWithButton .input {
  border-right-width: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.inputWithButton .button {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.selectWrapper {
  position: relative;
}

.selectWrapper .icon {
  position: absolute;
  right: 1em;
  top: 0;
  height: 100%;
  pointer-events: none;
}

.selectWrapper .select {
  padding-inline-end: 2em; /* padding including the icon */
}

/* Disable complex :not notation as it breaks the WMR build */
/* stylelint-disable selector-not-notation */
.input:is(:hover, :focus):not(:disabled):not([type="file"]),
.select:is(:hover, :focus):not(:disabled),
.button:is(:hover, :focus):not(.ghost, :disabled),
.input[type="file"]:is(:hover, :focus):not(:disabled)::file-selector-button {
  border: var(--border-width) solid var(--color-brand);
}

/*
  Fix for Date input height problems on iOS
  https://linear.app/chealt/issue/CHE-28/fix-date-selector-on-ios
*/
.input[type="date"] {
  height: 3rem;
  min-height: 3rem;
  line-height: 1rem;
}

.button.ghost {
  border-color: transparent;
  background-color: transparent;
}

.button.dark {
  color: var(--colo-text--dark);
}

.button.rounded {
  border-radius: 50%;
}

.button.ghost:is(:hover, :focus):not(:disabled) {
  background-color: var(--color-background-highlight);
}

.button.emphasized:not(:disabled) {
  background-color: var(--color-brand);
}

.button.contentOnly,
.button.contentOnly:is(:hover, :focus, :active) {
  border: 0 none;
  padding: 0;
}

.button.inline {
  display: inline;
}

.label {
  display: flex;
  flex-direction: column;
  gap: var(--gap);
}

.label.inline {
  flex-direction: row;
  align-items: center;
}

.label.inline.input {
  order: 1;
}

.text {
  text-transform: uppercase;
  font-weight: 600;
}

.label.inline .text {
  order: 2;
  text-transform: capitalize;
}

.input[type="checkbox"] {
  inline-size: var(--gap--l);
  block-size: var(--gap--l);
  outline-offset: 5px;
  accent-color: var(--color-brand);
  position: relative;
  transform-style: preserve-3d;
  margin: 0;
  cursor: pointer;
  appearance: auto;
}

.visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.container {
  position: relative;
}

/* INPUT WITH AN ICON */
.input + svg {
  position: absolute;
  height: calc(100% - 20px);
  top: 10px;
  right: 10px;
  opacity: 0.4;
}


@media (prefers-color-scheme: dark) {
  ::-webkit-calendar-picker-indicator {
    filter: invert(1) !important;
  }
}
